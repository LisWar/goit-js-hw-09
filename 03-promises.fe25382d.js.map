{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SA+CpC,IAAmBC,EAAEC,EAAEC,EAfvB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAGrDA,EAAM,G,CArCbR,EAAKe,iBAAiB,UAKtB,SAAsBC,GACpBA,EAAEC,iBAMF,MAAMT,MAACA,EAAKU,KAAEA,EAAIC,OAAEA,GAmCtB,WACE,MAAMX,EAAQR,EAAKoB,SAASZ,MAAMa,MAC5BH,EAAOlB,EAAKoB,SAASF,KAAKG,MAC1BF,EAASnB,EAAKoB,SAASD,OAAOE,MACpC,MAAO,C,MAACb,E,KAAOU,E,OAAMC,E,CAvCSG,GAE9BV,YAAW,KACT,IAAK,IAAIW,EAAQ,EAAGA,GAASJ,EAAQI,IAAS,CAE5CjB,EAAciB,EADJL,EAAKK,GAEdC,MAAMC,GAAWC,EAAA5B,GAAS6B,OAAOC,QAAQH,KACzCI,OAAMC,GAASJ,EAAA5B,GAAS6B,OAAOI,QAAQD,I,IAEzCtB,GAEHR,EAAKgC,O,IArBPN,EAAA5B,GAAS6B,OAAOM,QAAQ,6BAA8B,CAACC,QAAS,MAuC7C/B,EAtCT,IAsCWC,EAtCN,IAsCQC,EAtCJ,GAuCjBL,EAAKoB,SAASZ,MAAMa,MAAQlB,EAC5BH,EAAKoB,SAASF,KAAKG,MAAQjB,EAC3BJ,EAAKoB,SAASD,OAAOE,MAAQhB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n// const  delay = form.querySelector('[name=delay]');\n// const  step = form.querySelector('[name=step]');\n// const  amount = form.querySelector('[name=amount]');\n// const  submit = form.querySelector('button');\n\nform.addEventListener('submit', handleSubmit)\n\nNotiflix.Notify.warning('Default parameters applied', {timeout: 5000})\nsetParams(1000,500,10);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  // const  delay = form.querySelector('[name=delay]').value;\n  // const  step = form.querySelector('[name=step]').value;\n  // const  amount = form.querySelector('[name=amount]').value;\n\n  const {delay, step, amount} = getParams();\n\n  setTimeout(() => {\n    for (let index = 1; index <= amount; index++) {\n      const d = step*index;\n      createPromise(index,d)\n      .then((result) => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n    }\n  }, delay)\n\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n      \n    }, delay);\n  });\n}\n\nfunction setParams(d,s,a) {\n  form.elements.delay.value = d;\n  form.elements.step.value = s;\n  form.elements.amount.value = a;\n}\n\nfunction getParams() {\n  const delay = form.elements.delay.value;\n  const step = form.elements.step.value;\n  const amount = form.elements.amount.value;\n  return {delay, step, amount};\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","d","s","a","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","step","amount","elements","value","$47d4ff9957288465$var$getParams","index","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","reset","warning","timeout"],"version":3,"file":"03-promises.fe25382d.js.map"}