{"mappings":"iiBAAA,IAiDmBA,EAAEC,EAAEC,EAjDvBC,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAgCpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAGnDA,E,IArCPL,EAAKa,iBAAiB,UAKtB,SAAsBC,GACpBA,EAAEC,iBAMF,IAA8BC,EAmChC,WACE,IAAMX,EAAQL,EAAKiB,SAASZ,MAAMa,MAC5BC,EAAOnB,EAAKiB,SAASE,KAAKD,MAC1BE,EAASpB,EAAKiB,SAASG,OAAOF,MACpC,MAAO,CAACb,QAAOc,OAAMC,S,CAvCSC,GAAvBhB,EAAuBW,EAAvBX,MAAOc,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OAEpBX,YAAW,WACT,IAAK,IAAIa,EAAQ,EAAGA,GAASF,EAAQE,IAAS,CAE5CnB,EAAcmB,EADJH,EAAKG,GAEdC,MAAK,SAACC,G,OAAWC,EAAA3B,GAAS4B,OAAOC,QAAQH,E,IACzCI,OAAM,SAAAC,G,OAASJ,EAAA3B,GAAS4B,OAAOI,QAAQD,E,OAEzCxB,GAEHL,EAAK+B,O,IArBPN,EAAA3B,GAAS4B,OAAOM,QAAQ,6BAA8B,CAACC,QAAS,MAuC7CtC,EAtCT,IAsCWC,EAtCN,IAsCQC,EAtCJ,GAuCjBG,EAAKiB,SAASZ,MAAMa,MAAQvB,EAC5BK,EAAKiB,SAASE,KAAKD,MAAQtB,EAC3BI,EAAKiB,SAASG,OAAOF,MAAQrB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n// const  delay = form.querySelector('[name=delay]');\n// const  step = form.querySelector('[name=step]');\n// const  amount = form.querySelector('[name=amount]');\n// const  submit = form.querySelector('button');\n\nform.addEventListener('submit', handleSubmit)\n\nNotiflix.Notify.warning('Default parameters applied', {timeout: 5000})\nsetParams(1000,500,10);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  // const  delay = form.querySelector('[name=delay]').value;\n  // const  step = form.querySelector('[name=step]').value;\n  // const  amount = form.querySelector('[name=amount]').value;\n\n  const {delay, step, amount} = getParams();\n\n  setTimeout(() => {\n    for (let index = 1; index <= amount; index++) {\n      const d = step*index;\n      createPromise(index,d)\n      .then((result) => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n    }\n  }, delay)\n\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n      \n    }, delay);\n  });\n}\n\nfunction setParams(d,s,a) {\n  form.elements.delay.value = d;\n  form.elements.step.value = s;\n  form.elements.amount.value = a;\n}\n\nfunction getParams() {\n  const delay = form.elements.delay.value;\n  const step = form.elements.step.value;\n  const amount = form.elements.amount.value;\n  return {delay, step, amount};\n}"],"names":["d","s","a","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","addEventListener","e","preventDefault","ref","elements","value","step","amount","$ce04d3a99e08e73b$var$getParams","index","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","reset","warning","timeout"],"version":3,"file":"03-promises.fefc80ea.js.map"}